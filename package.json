{
  "name": "gpt-developer",
  "repository": {
    "type": "git",
    "url": "https://github.com/AlexisAndradeDev/gpt-developer.git"
  },
  "displayName": "GPT Developer",
  "publisher": "AlexisAndradeDev",
  "description": "Software development assistant based on GPT. Auto-complete code, give software architecture suggestions, debug, simulate executions, and all the other functions that GPT can perform if good prompts are used.",
  "icon": "images/icon.png",
  "version": "1.6.0",
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gpt-developer.autocode",
        "title": "GPT Developer: Autocode"
      },
      {
        "command": "gpt-developer.autorun",
        "title": "GPT Developer: Autorun"
      },
      {
        "command": "gpt-developer.ask_problem",
        "title": "GPT Developer: Ask problem"
      },
      {
        "command": "gpt-developer.autochange",
        "title": "GPT Developer: Autochange"
      },
      {
        "command": "gpt-developer.explain",
        "title": "GPT Developer: Explain"
      },
      {
        "command": "gpt-developer.ask_free",
        "title": "GPT Developer: Ask Free"
      },
      {
        "command": "gpt-developer.autorun_example",
        "title": "GPT Developer: Autorun with Example"
      },
      {
        "command": "gpt-developer.autorun_sequence",
        "title": "GPT Developer: Autorun in Sequence"
      },
      {
        "command": "gpt-developer.esoteric",
        "title": "GPT Developer: Esoteric"
      },
      {
        "command": "gpt-developer.refactorize",
        "title": "GPT Developer: Refactorize"
      },
      {
        "command": "gpt-developer.design_patterns_suggestions",
        "title": "GPT Developer: Design Patterns Suggestions"
      },
      {
        "command": "gpt-developer.design_pattern",
        "title": "GPT Developer: Design Pattern"
      },
      {
        "command": "gpt-developer.optimize_code",
        "title": "GPT Developer: Optimize Code"
      },
      {
        "command": "gpt-developer.add_error_handling",
        "title": "GPT Developer: Add Error Handling"
      },
      {
        "command": "gpt-developer.comment_code",
        "title": "GPT Developer: Comment Code"
      },
      {
        "command": "gpt-developer.create_tests",
        "title": "GPT Developer: Create Tests"
      }
    ],
    "configuration": {
      "title": "GPT Developer",
      "properties": {
        "gpt-developer.openAIKey": {
          "type": "string",
          "default": "",
          "description": "Your OpenAI API key. Leave this field blank to use OPENAI_SECRET_KEY environment variable."
        },
        "gpt-developer.model": {
          "type": "string",
          "default": "gpt-4o",
          "enum": [
            "gpt-4o",
            "gpt-4-turbo",
            "gpt-4",
            "gpt-3.5-turbo"
          ],
          "description": "The model from OpenAI that you want to use."
        },
        "gpt-developer.maxOutputTokens": {
          "type": "number",
          "default": 1000,
          "description": "Maximum number of tokens that GPT will generate. The higher this value, the more tokens will be used. There's the possibility that, considering also the number of input tokens (length of the selected code), the token limit of the model is surpassed and it will not be possible to receive a response from the model."
        },
        "gpt-developer.maxInputTokens": {
          "type": "number",
          "default": 1000,
          "description": "Maximum number of approximate tokens (4 characters) that GPT will get as input. The higher this value, the more tokens will be used. There's the possibility that the token limit of the model is surpassed and it will not be possible to receive a response from the model. Learn more about each model's context window: https://platform.openai.com/docs/models."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "openai": "^3.2.1"
  }
}
